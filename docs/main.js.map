{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AACuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;ACAjB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,yBAAyB,CAAC;KACnC;;wEAFY,YAAY;0GAAZ,YAAY;QCPzB,mFAA+C;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCF;AACa;AAEF;AACT;AAC4C;AACnC;AACF;AACQ;AACiB;AACnB;AACR;;;;;;AAqB7C,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YAXJ;YACP,oEAAa;YACb,iEAAgB;YAChB,uDAAW;YACX,kEAAgB;YAChB,wEAAqB,EAAE;YACvB,yFAAuB;YACvB,gFAA0B,EAAE;YAC5B,+EAAwB,EAAE;YAC1B,uEAAoB,EAAE;SACvB;mIAIU,SAAS,mBAjBlB,wDAAY;QACZ,oGAAwB,aAGxB,oEAAa;QACb,iEAAgB;QAChB,uDAAW;QACX,kEAAgB,oEAEhB,yFAAuB;;;;;;;;;;;;;;;;;;ACvBW;;;AAM/B,MAAM,WAAW;IAEtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,+EAA+E;IAC/E,6BAA6B;IAC7B,IAAI;IACJ,oBAAoB,CAAC,YAA0B;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0CAA0C,EAAE,YAAY,CAAC,CAAC;QAChF;;;;WAIG;IACL,CAAC;IACD,oBAAoB;QAClB,OAAO,wCAAE,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC;IACxD,CAAC;;sEAjBU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC0FJA,IAAAA,4DAAAA;AAAsDA,IAAAA,oDAAAA;AAAQA,IAAAA,0DAAAA;;;;;AAARA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;;;ACrFhE,MAAOC,wBAAP,CAA+B;AAmBnCC,cAAoBC,WAApB,EAA4C;AAAxB;AAPpB,uBAAsB,IAAtB;AAGA,sBAAa,CAAb;AACA,qBAAY,EAAZ;AACA,sBAAa,KAAb;AACA,wBAAYC,kBAAsB,KAAKC,oBAA3B,CAAZ;AACiD;;AAEjDC,UAAQ;AACN,SAAKC,uBAAL,GAA+BC,IAA/B,CAAoCC,CAAC,IAAI,KAAKJ,oBAAL,GAA4BI,CAArE,EAAwEC,KAAxE,CAA8EC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd,CAAnF;AACA,SAAKC,iBAAL,GAAyB,KAAKZ,WAAL,CAAiBa,oBAAjB,EAAzB;AACA,SAAKC,SAAL,GAAiB,IAAIC,IAAJ,EAAjB;AACD;;AACDC,UAAQ,CAACC,IAAD,EAAa;AACnB;AACAR,WAAO,CAACC,GAAR,CAAYO,IAAI,CAACC,KAAjB;AACA,SAAKlB,WAAL,CAAiBmB,oBAAjB,CAAsCF,IAAI,CAACC,KAA3C,EAAkDE,SAAlD,CACEC,GAAG,IAAG;AACJ;AACAZ,aAAO,CAACC,GAAR,CAAY,WAAWW,GAAvB;AACD,KAJH,EAKE;AACA;AACA;AACA;AACAC,SAAK,IAAI,KAAKC,aAAL,CAAmBD,KAAnB,CATX,EAUE,MAAK;AACH;AACAb,aAAO,CAACC,GAAR,CAAY,UAAZ;AACD,KAbH;AAeD;;AACDa,eAAa,CAACD,KAAD,EAAW,CAEvB;;AACDE,QAAM,CAACC,KAAD,EAAe;AACnB;AACAhB,WAAO,CAACC,GAAR,CAAYe,KAAZ;AACD;;AACKrB,yBAAuB;AAAA;AAC3B,aAAO;AACLsB,YAAI,EAAE,QADD;AAELC,mBAAW,EAAE,IAFR;AAGLC,sBAAc,EAAE,MAHX;AAILC,wBAAgB,EAAE,QAJb;AAKLC,aAAK,EAAE;AALF,OAAP;AAD2B;AAQ5B;;AA5DkC;;;mBAAxBhC,0BAAwBD,+DAAAA,CAAAA,2DAAAA;AAAA;;;QAAxBC;AAAwBiC;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;;;ADXrCtC,MAAAA,4DAAAA;AACIA,MAAAA,4DAAAA;AAAIA,MAAAA,oDAAAA;AAAaA,MAAAA,0DAAAA;AAGjBA,MAAAA,4DAAAA;AAAqBA,MAAAA,wDAAAA;AAAAA,QAAAA,2DAAAA;;AAAA;;AAAA,eAAYuC,iBAAZ;AAA0B,OAA1B;AAEjBvC,MAAAA,4DAAAA;AACIA,MAAAA,4DAAAA;AAAkBA,MAAAA,oDAAAA;AAAIA,MAAAA,0DAAAA;AACtBA,MAAAA,4DAAAA;AAAkDA,MAAAA,wDAAAA;AAAA;AAAA,SAA+B,MAA/B,EAA+B;AAAAA,QAAAA,2DAAAA;;AAAA;;AAAA,eACZuC,eADY;AACK,OADpC;AAAlDvC,MAAAA,0DAAAA;AAGAA,MAAAA,4DAAAA;AACIA,MAAAA,oDAAAA;AACJA,MAAAA,0DAAAA;AACJA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACIA,MAAAA,4DAAAA;AAAiEA,MAAAA,wDAAAA;AAAA;AAAA;AAE7DA,MAAAA,oDAAAA;AACJA,MAAAA,0DAAAA;AACJA,MAAAA,0DAAAA;AAiBAA,MAAAA,4DAAAA;AACIA,MAAAA,4DAAAA;AAAuBA,MAAAA,oDAAAA;AAAUA,MAAAA,0DAAAA;AACjCA,MAAAA,4DAAAA;AAAiEA,MAAAA,wDAAAA;AAAA;AAAA;AAAjEA,MAAAA,0DAAAA;AAEJA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACIA,MAAAA,4DAAAA;AAAuBA,MAAAA,oDAAAA;AAAUA,MAAAA,0DAAAA;AACjCA,MAAAA,4DAAAA;AAAYA,MAAAA,wDAAAA;AAAA;AAAA;AACZA,MAAAA,0DAAAA;AACJA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACIA,MAAAA,oDAAAA;AACAA,MAAAA,4DAAAA;AAAQA,MAAAA,wDAAAA;AAAA;AAAA;AAC6BA,MAAAA,0DAAAA;AACzCA,MAAAA,0DAAAA;AACAA,MAAAA,oDAAAA;AACAA,MAAAA,4DAAAA;AACIA,MAAAA,4DAAAA;AACIA,MAAAA,wDAAAA;AAAA;AAAA;AADJA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACIA,MAAAA,oDAAAA;AACJA,MAAAA,0DAAAA;AACJA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAAGA,MAAAA,oDAAAA;AAAoBA,MAAAA,0DAAAA;AACvBA,MAAAA,4DAAAA;AACIA,MAAAA,4DAAAA;AACIA,MAAAA,4DAAAA;AACIA,MAAAA,wDAAAA;AAAA;AAAA;AADJA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACIA,MAAAA,oDAAAA;AACJA,MAAAA,0DAAAA;AACJA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACIA,MAAAA,4DAAAA;AACIA,MAAAA,wDAAAA;AAAA;AAAA;AADJA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACIA,MAAAA,oDAAAA;AACJA,MAAAA,0DAAAA;AACJA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACIA,MAAAA,4DAAAA;AACIA,MAAAA,wDAAAA;AAAA;AAAA;AADJA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACIA,MAAAA,oDAAAA;AACJA,MAAAA,0DAAAA;AACJA,MAAAA,0DAAAA;AACJA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACIA,MAAAA,4DAAAA;AAA8BA,MAAAA,oDAAAA;AAAiBA,MAAAA,0DAAAA;AAC/CA,MAAAA,4DAAAA;AACIA,MAAAA,wDAAAA;AAAA;AAAA;AAOAA,MAAAA,wDAAAA;;AACJA,MAAAA,0DAAAA;AACJA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACIA,MAAAA,4DAAAA;AAAmBA,MAAAA,oDAAAA;AAAKA,MAAAA,0DAAAA;AACxBA,MAAAA,4DAAAA;AAAgEA,MAAAA,wDAAAA;AAAA;AAAA;AAAiCA,MAAAA,0DAAAA;AACrGA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAAgCA,MAAAA,oDAAAA;AAAIA,MAAAA,0DAAAA;AACxCA,MAAAA,0DAAAA;AACJA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AAAIA,MAAAA,oDAAAA;;AAAyBA,MAAAA,0DAAAA;;;;;;;;AAnGbA,MAAAA,uDAAAA;AAAAA,MAAAA,yDAAAA;AAF8CA,MAAAA,wDAAAA;AAG7CA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAK4DA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAE7DA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA;AAqB6DA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAKrDA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAKJA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,4BAAwB,KAAxB,EAAwBuC,aAAxB,EAAwB,UAAxB,EAAwBA,cAAxB,EAAwB,QAAxB,EAAwBvC,6DAAAA,SAAxB;AAGZA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA;AAGQA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAUIA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAOAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAOAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAUJA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAOyBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,YAAAA,yDAAAA;AAMmCA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAOxEA,MAAAA,uDAAAA;AAAAA,MAAAA,+DAAAA,CAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;;AE7GJ,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data/data.service.ts","./src/app/user-setting-form/user-setting-form.component.html","./src/app/user-setting-form/user-setting-form.component.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TestAngularFormsProject';\n}\n","<app-user-setting-form></app-user-setting-form>","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { UserSettingFormComponent } from './user-setting-form/user-setting-form.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\r\nimport { RatingModule } from 'ngx-bootstrap/rating';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserSettingFormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ButtonsModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    TimepickerModule.forRoot(),\r\n    RatingModule.forRoot()\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { UserSettings } from './user-setting';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // postUserSettingsForm(userSettings: UserSettings): Observable<UserSettings> {\r\n  //   return of(userSettings);\r\n  // }\r\n  postUserSettingsForm(userSettings: UserSettings): Observable<any> {\r\n    return this.http.post(\"https://putsreq.com/fA61a0sN0zeOMhBzDInT\", userSettings);\r\n    /* to run website add this in code side\r\n     * var parsedBody = JSON.parse(request.body);\r\n        parsedBody.id=1;\r\n      response.body ={entity:parsedBody,message:\"successed\",success:true};\r\n     */\r\n  }\r\n  getsubscriptionTypes(): Observable<string[]> {\r\n    return of([\"Dayly\", \"Monthly\", \"Annual\", \"Lifetime\"]);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h2>User Settings</h2>\r\n\r\n    <!-- <form #form=\"ngForm\" ngNativeValidate> -->\r\n    <form #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\">\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"name\">Name</label>\r\n            <input id=\"name\" name=\"name\" class=\"form-control\" [(ngModel)]=\"userSettings.name\" required minlength=\"3\"\r\n                maxlength=\"10\" pattern=\"*\" #testRef #nameField=\"ngModel\" (blur)=\"onBlur(nameField)\"\r\n                [class.field-error]=\"form.submitted && nameField.invalid\">\r\n            <div [hidden]=\"!form.submitted || nameField.valid\" class=\"alert alert-danger\">\r\n                Enter a name\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <button type=\"button\" class=\"btn btn-primary\" name=\"singleModel\" [(ngModel)]=\"singleModel\" btnCheckbox\r\n                btnCheckboxTrue=\"On\" btnCheckboxFalse=\"Off\">\r\n                {{singleModel}}\r\n            </button>\r\n        </div>\r\n        <!-- <h3>{{testRef.className}}</h3> -->\r\n        <!-- that for css Validate \r\n                            form-control \r\n                            ng-untouched <==>ng-touched\r\n                            ng-pristine <==>ng-dirty\r\n                            ng-valid <==>ng-invalid \r\n                        -->\r\n        <!-- Validate by ngModel properties -->\r\n        <!--         \r\n        <h3>vaild: {{nameField.valid }}</h3>\r\n        <h3>invalid: {{nameField.invalid }}</h3>\r\n        <h3>touched: {{nameField.touched }}</h3>\r\n        <h3>untouched: {{nameField.untouched }}</h3>\r\n        <h3>pristine: {{nameField.pristine }}</h3>\r\n        <h3>dirty: {{nameField.dirty }}</h3> \r\n    -->\r\n        <div class=\"form-group\">\r\n            <label for=\"startDate\">Start Date</label>\r\n            <input type=\"text\" placeholder=\"Start Date\" class=\"form-control\" [(ngModel)]=\"startDate\" name=\"startDate\"\r\n                id=\"startDate\" bsDatepicker>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"startTime\">Start Time</label>\r\n            <timepicker [(ngModel)]=\"startTime\" name=\"startTime\" id=\"startTime\">\r\n            </timepicker>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            User Rating\r\n            <rating [(ngModel)]=\"userRating\" [max]=\"maxRating\" [readonly]=\"isReadonly\" name=\"userRating\" id=\"userRating\"\r\n                [titles]=\"['one','two','three']\"></rating>\r\n        </div>\r\n        User Rating : {{ userRating }}\r\n        <div class=\"form-check form-group\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"emailOffers\" name=\"emailOffers\"\r\n                [(ngModel)]=\"userSettings.emailOffers\">\r\n            <label class=\"form-check-label\" for=\"emailOffers\">\r\n                Email Special Offers\r\n            </label>\r\n        </div>\r\n\r\n        <p>User Interface Style</p>\r\n        <div class=\"form-group\">\r\n            <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"interfaceStyle\" id=\"lightInterface\" value=\"light\"\r\n                    [(ngModel)]=\"userSettings.interfaceStyle\">\r\n                <label class=\"form-check-label\" for=\"lightInterface\">\r\n                    Light\r\n                </label>\r\n            </div>\r\n            <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"interfaceStyle\" id=\"mediumInterface\" value=\"medium\"\r\n                    [(ngModel)]=\"userSettings.interfaceStyle\">\r\n                <label class=\"form-check-label\" for=\"mediumInterface\">\r\n                    Medium\r\n                </label>\r\n            </div>\r\n            <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"interfaceStyle\" id=\"darkInterface\" value=\"dark\"\r\n                    [(ngModel)]=\"userSettings.interfaceStyle\">\r\n                <label class=\"form-check-label\" for=\"darkInterface\">\r\n                    Dark\r\n                </label>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"subscriptionType\">Subscription Type</label>\r\n            <select class=\"form-control\" id=\"subscriptionType\" name=\"subscriptionType\"\r\n                [(ngModel)]=\"userSettings.subscriptionType\">\r\n                <!-- \r\n                    <option>Monthly</option>\r\n                    <option>Annual</option>\r\n                    <option>Lifetime</option> \r\n                -->\r\n                <!-- <option *ngFor=\"let type of subscriptionTypes\">{{type}}</option> -->\r\n                <option *ngFor=\"let type of subscriptionTypes |async\">{{type}}</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"notes\">Notes</label>\r\n            <textarea id=\"notes\" name=\"notes\" class=\"form-control\" rows=\"3\" [(ngModel)]=\"userSettings.notes\"></textarea>\r\n        </div>\r\n\r\n        <button class=\"btn btn-primary\">Send</button>\r\n    </form>\r\n</div>\r\n<!-- <h3>{{ originalUserSettings | json }}</h3> -->\r\n<h3>{{ userSettings | json }}</h3>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm, NgModel } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { DataService } from '../data/data.service';\r\nimport { UserSettings } from '../data/user-setting';\r\n\r\n@Component({\r\n  selector: 'app-user-setting-form',\r\n  templateUrl: './user-setting-form.component.html',\r\n  styleUrls: ['./user-setting-form.component.css']\r\n})\r\nexport class UserSettingFormComponent implements OnInit {\r\n  originalUserSettings!: UserSettings;\r\n  // originalUserSettings: UserSettings = {\r\n  //   name: 'Milton',\r\n  //   emailOffers: true,\r\n  //   interfaceStyle: 'dark',\r\n  //   subscriptionType: 'Annual',\r\n  //   notes: 'here are some notes...'\r\n  // };\r\n  //subscriptionTypes = [\"one\", \"two\", \"three\", \"four\"];\r\n  subscriptionTypes!: Observable<string[]>;\r\n  users!: any[];\r\n  singleModel: string = \"On\";\r\n  startDate!: Date;\r\n  startTime!: Date;\r\n  userRating = 0;\r\n  maxRating = 10;\r\n  isReadonly = false;\r\n  userSettings: UserSettings = { ...this.originalUserSettings };\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getOriginalUserSettings().then(s => this.originalUserSettings = s).catch(e => console.log(e.message));\r\n    this.subscriptionTypes = this.dataService.getsubscriptionTypes();\r\n    this.startDate = new Date();\r\n  }\r\n  onSubmit(form: NgForm) {\r\n    debugger\r\n    console.log(form.value);\r\n    this.dataService.postUserSettingsForm(form.value).subscribe(\r\n      res => {\r\n        debugger\r\n        console.log(\"sucess\" + res)\r\n      },\r\n      // err => {\r\n      //   debugger\r\n      //   console.log(\"error\" + err)\r\n      // },\r\n      error => this.httpHandError(error),\r\n      () => {\r\n        debugger\r\n        console.log(\"complete\")\r\n      }\r\n    );\r\n  }\r\n  httpHandError(error: any) {\r\n\r\n  }\r\n  onBlur(field: NgModel) {\r\n    debugger\r\n    console.log(field);\r\n  }\r\n  async getOriginalUserSettings() {\r\n    return {\r\n      name: 'Milton',\r\n      emailOffers: true,\r\n      interfaceStyle: 'dark',\r\n      subscriptionType: 'Annual',\r\n      notes: 'here are some notes...'\r\n    };\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["i0","UserSettingFormComponent","constructor","dataService","Object","originalUserSettings","ngOnInit","getOriginalUserSettings","then","s","catch","e","console","log","message","subscriptionTypes","getsubscriptionTypes","startDate","Date","onSubmit","form","value","postUserSettingsForm","subscribe","res","error","httpHandError","onBlur","field","name","emailOffers","interfaceStyle","subscriptionType","notes","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///"}